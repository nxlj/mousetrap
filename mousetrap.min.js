!function (t, e, n) { if (t) { for (var r, i = { 8: "backspace", 9: "tab", 13: "enter", 16: "shift", 17: "ctrl", 18: "alt", 20: "capslock", 27: "esc", 32: "space", 33: "pageup", 34: "pagedown", 35: "end", 36: "home", 37: "left", 38: "up", 39: "right", 40: "down", 45: "ins", 46: "del", 91: "meta", 93: "meta", 224: "meta" }, o = { 106: "*", 107: "+", 109: "-", 110: ".", 111: "/", 186: ";", 187: "=", 188: ",", 189: "-", 190: ".", 191: "/", 192: "`", 219: "[", 220: "\\", 221: "]", 222: "'" }, a = { "~": "`", "!": "1", "@": "2", "#": "3", $: "4", "%": "5", "^": "6", "&": "7", "*": "8", "(": "9", ")": "0", _: "-", "+": "=", ":": ";", '"': "'", "<": ",", ">": ".", "?": "/", "|": "\\" }, c = (new Set(["shift", "ctrl", "alt", "meta", "l_shift", "l_ctrl", "l_alt", "l_meta", "r_shift", "r_ctrl", "r_alt", "r_meta"]), { option: "alt", command: "meta", return: "enter", escape: "esc", plus: "+", mod: /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? "meta" : "ctrl" }), l = 1; l < 20; ++l)i[111 + l] = "f" + l; for (l = 0; l <= 9; ++l)i[l + 96] = l.toString(); b.prototype.bind = function (t, e, n) { var r = this; return t = t instanceof Array ? t : [t], r._bindMultiple.call(r, t, e, n), r }, b.prototype.unbind = function (t, e) { return this.bind.call(this, t, (function () { }), e) }, b.prototype.trigger = function (t, e) { var n = this; return n._directMap[t + ":" + e] && n._directMap[t + ":" + e]({}, t), n }, b.prototype.reset = function () { var t = this; return t._callbacks = {}, t._directMap = {}, t }, b.prototype.stopCallback = function (t, e) { if ((" " + e.className + " ").indexOf(" mousetrap ") > -1) return !1; if (v(e, this.target)) return !1; if ("composedPath" in t && "function" == typeof t.composedPath) { var n = t.composedPath()[0]; n !== t.target && (e = n) } return "INPUT" == e.tagName || "SELECT" == e.tagName || "TEXTAREA" == e.tagName || e.isContentEditable }, b.prototype.handleKey = function () { return this._handleKey.apply(this, arguments) }, b.addKeycodes = function (t) { for (var e in t) t.hasOwnProperty(e) && (i[e] = t[e]); r = null }, b.init = function () { var t = b(e); for (var n in t) "_" !== n.charAt(0) && (b[n] = function (e) { return function () { return t[e].apply(t, arguments) } }(n)) }, b.init(), t.Mousetrap = b, "undefined" != typeof module && module.exports && (module.exports = b), "function" == typeof define && define.amd && define((function () { return b })) } function s(t, e, n, r) { t.addEventListener ? t.addEventListener(e, n, r) : t.attachEvent("on" + e, n) } function u(t) { if ("keypress" == t.type) { var e = String.fromCharCode(t.which); return t.shiftKey || (e = e.toLowerCase()), e } return i[t.which] ? i[t.which] : o[t.which] ? o[t.which] : String.fromCharCode(t.which).toLowerCase() } function f(t, e) { let n = p(t); return (n & p(e)) === n } function p(t) { let e = 0; for (let n of t) { let t = m(n) || 3; n.endsWith("shift") ? e += t << 0 : n.endsWith("ctrl") ? e += t << 2 : n.endsWith("alt") ? e += t << 4 : n.endsWith("meta") && (e += t << 6) } return e } function h(t) { var e = []; let r = function (t) { if (t?.location === n) return ""; if (1 === t.location) return "l_"; if (2 === t.location) return "r_"; throw new Error("Unknown event location: " + t.location) }(t); return t.shiftKey && e.push(r + "shift"), t.altKey && e.push(r + "alt"), t.ctrlKey && e.push(r + "ctrl"), t.metaKey && e.push(r + "meta"), e } function d(t) { let e = k(t)[1]; return "shift" == e || "ctrl" == e || "alt" == e || "meta" == e } function y(t, e, n) { return n || (n = function () { if (!r) for (var t in r = {}, i) t > 95 && t < 112 || i.hasOwnProperty(t) && (r[i[t]] = t); return r }()[t] ? "keydown" : "keypress"), "keypress" == n && e.length && (n = "keydown"), n } function m(t) { return t.startsWith("r_") ? 2 : t.startsWith("l_") ? 1 : 0 } function k(t) { return t.startsWith("l_") ? ["l_", t.substring(2)] : t.startsWith("r_") ? ["r_", t.substring(2)] : ["", t] } function _(t, e) { var n, r, i, o = new Set; for (n = function (t) { return "+" === t ? ["+"] : (t = t.replace(/\+{2}/g, "+plus")).split("+") }(t), i = 0; i < n.length; ++i) { r = n[i]; let [t, r] = k(r); c[r] && (r = c[r]), e && "keypress" != e && a[r] && (r = a[r], o.has("l_shift") || o.has("r_shift") || o.add("shift")), d(r) && (o.delete(r), o.add(t + r)) } return { combination: t, key: r, modifiers: o = Array.from(o), action: e = y(r, o, e) } } function v(t, n) { return null !== t && t !== e && (t === n || v(t.parentNode, n)) } function b(t, r = {}) { var i = this; if (t = t || e, !(i instanceof b)) return new b(t, r); i.target = t, i._callbacks = {}, i._directMap = {}; var o, a = {}, c = !1, l = !1, p = !1; function y(t) { t = t || {}; var e, n = !1; for (e in a) t[e] ? n = !0 : a[e] = 0; n || (p = !1) } function m(t, e, n, r, o, c) { var l, s, u = [], p = n.type; if (!i._callbacks[t]) return []; for ("keyup" == p && d(t) && (e = [t]), l = 0; l < i._callbacks[t].length; ++l)if (s = i._callbacks[t][l], (r || !s.seq || a[s.seq] == s.level) && p == s.action && ("keypress" == p && !n.metaKey && !n.ctrlKey || f(e, s.modifiers))) { var h = !r && s.combo == o, y = r && s.seq == r && s.level == c; (h || y) && i._callbacks[t].splice(l, 1), u.push(s) } return u } function k(t, e, n, r) { i.stopCallback(e, e.target || e.srcElement, n, r) || !1 === t(e, n) && (function (t) { t.preventDefault ? t.preventDefault() : t.returnValue = !1 }(e), function (t) { t.stopPropagation ? t.stopPropagation() : t.cancelBubble = !0 }(e)) } function v(t) { "number" != typeof t.which && (t.which = t.keyCode); var e = u(t); e && ("keyup" != t.type || c !== e ? i.handleKey(e, h(t), t) : c = !1) } function w(t, e, n, r) { function i(e) { return function () { p = e, ++a[t], clearTimeout(o), o = setTimeout(y, 1e3) } } function l(e) { k(n, e, t), "keyup" !== r && (c = u(e)), setTimeout(y, 10) } a[t] = 0; for (let n, o = 0; n < e.length; ++n) { let a = n + 1 === e.length, c = d(e[n + 1]) ? "keydown" : r || _(e[n + 1]).action, s = r; d(e[n]) && (g(e[n], i("keyup"), "keydown", t, o++), s = "keyup"); let u = a ? l : i(c); g(e[n], u, s, t, o++) } } function g(t, e, r, o, a) { t = t.replace(/\s+/g, " "), i._directMap[t + ":" + r] = e; var c, l = t.split(" "); l.length > 1 || d(l[0]) && a === n ? w(t, l, e, r) : (c = _(t, r), i._callbacks[c.key] = i._callbacks[c.key] || [], m(c.key, c.modifiers, { type: c.action }, o, c.combination, a), i._callbacks[c.key][o ? "unshift" : "push"]({ callback: e, modifiers: c.modifiers, action: c.action, seq: o, level: a, combo: t })) } i._handleKey = function (t, e, n) { var r, i = m(t, e, n), o = {}, a = 0, c = !1; for (r = 0; r < i.length; ++r)i[r].seq && (a = Math.max(a, i[r].level)); for (r = 0; r < i.length; ++r)if (i[r].seq) { if (i[r].level != a) continue; c = !0, o[i[r].seq] = 1, k(i[r].callback, n, i[r].combo, i[r].seq) } else c || k(i[r].callback, n, i[r].combo); var s = "keypress" == n.type && l; n.type != p || d(t) || s || y(o), l = c && "keydown" == n.type }, i._bindMultiple = function (t, e, n) { for (var r = 0; r < t.length; ++r)g(t[r], e, n) }, s(t, "keypress", v, r), s(t, "keydown", v, r), s(t, "keyup", v, r) } }("undefined" != typeof window ? window : null, "undefined" != typeof window ? document : null);